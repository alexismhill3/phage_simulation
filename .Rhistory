mutate(PSM = n(), area_rank = row_number()) %>%
top_n(3, area_rank) %>%
summarize(PSM = unique(PSM), area = mean(`Precursor Area`, na.rm = T))
View(peps2)
source('~/PycharmProjects/tabasco/scripts/R/raw_parser.R', echo=TRUE)
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, `Protein Group Accessions`, Sequence) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
distinct(new_area) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T)) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = sum(PSM)) %>%
top_n(3, desc(area)) %>%
summarize(PSM = unique(PSM), area = mean(area, na.rm = T))
View(peps2)
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, `Protein Group Accessions`, Sequence) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T)) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = sum(PSM)) %>%
top_n(3, desc(area)) %>%
summarize(PSM = unique(PSM), area = mean(area, na.rm = T))
View(peps)
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, `Protein Group Accessions`, `Search ID`, Sequence) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T)) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = sum(PSM)) %>%
top_n(3, desc(area)) %>%
summarize(PSM = unique(PSM), area = mean(area, na.rm = T))
View(peps2)
View(peps2)
source('~/PycharmProjects/tabasco/scripts/R/raw_parser.R', echo=TRUE)
View(peps2)
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, `Protein Group Accessions`, Sequence) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T)) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = sum(PSM)) %>%
top_n(3, desc(area)) %>%
summarize(PSM = unique(PSM), area = mean(area, na.rm = T))
source('~/PycharmProjects/tabasco/scripts/R/raw_parser.R', echo=TRUE)
View(peps2)
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, `Protein Group Accessions`, Sequence) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T)) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = sum(PSM)) %>%
top_n(2, desc(area)) %>%
summarize(PSM = unique(PSM), area = mean(area, na.rm = T))
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, `Protein Group Accessions`, Sequence) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T)) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = sum(PSM)) %>%
top_n(2, area) %>%
summarize(PSM = unique(PSM), area = mean(area, na.rm = T))
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, `Protein Group Accessions`, Sequence) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T)) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = sum(PSM)) %>%
top_n(3, area) %>%
summarize(PSM = unique(PSM), area = mean(area, na.rm = T))
source('~/PycharmProjects/tabasco/scripts/R/raw_parser.R', echo=TRUE)
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, `Protein Group Accessions`, Sequence) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T)) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = sum(PSM)) %>%
top_n(6, area) %>%
summarize(PSM = unique(PSM), area = mean(area, na.rm = T))
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
top_n(3, new_area) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T))
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Precursor Area`)) %>%
top_n(3, new_area) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T))
View(peps2)
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
distinct(new_area) %>%
top_n(3, new_area) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T))
View(peps2)
source('~/PycharmProjects/tabasco/scripts/R/raw_parser.R', echo=TRUE)
View(peps2)
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, `Protein Group Accessions`, `Search ID`, Sequence) %>%
mutate(in_reps = n()) %>%
filter(in_reps == 1) %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
distinct(new_area) %>%
top_n(3, new_area) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T))
View(peps2)
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, `Protein Group Accessions`, `Search ID`, Sequence) %>%
mutate(in_reps = n()) %>%
filter(in_reps != 1) %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
distinct(new_area) %>%
top_n(3, new_area) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T))
View(peps2)
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
distinct(new_area) %>%
top_n(2, new_area) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T))
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
distinct(new_area) %>%
top_n(6, new_area) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T))
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
distinct(new_area) %>%
top_n(4, new_area) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T))
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
distinct(new_area) %>%
top_n(3, new_area) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T))
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
distinct(new_area) %>%
top_n(2, new_area) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T))
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
distinct(new_area) %>%
top_n(3, new_area) %>%
mutate(in_reps = n()) %>%
filter(in_reps > 1) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area, na.rm = T))
View(peps2)
peps2 <- peps %>%
ungroup() %>%
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>%
distinct(new_area) %>%
top_n(3, new_area) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
summarize(PSM = n(), area = mean(new_area))
View(filter(peps, `Protein Group Accessions` == 'YP_003047436.1', strain == '11-44', time == '1min'))
testpep <- filter(peps, `Protein Group Accessions` == 'YP_003047436.1', strain == '11-44', time == '1min')
testpep <- filter(peps, strain == '11-44', time == '1min')
testpep <- filter(peps, strain == '11-44', time == '1min', `Protein Group Accessions` == 'YP_003047436.1')
testpep <- filter(`Protein Group Accessions` == 'YP_003047436.1')
testpep <- filter(peps, `Protein Group Accessions` == 'YP_003047436.1')
testpep <- filter(peps, `Protein Group Accessions` == 'YP_003046375.1')
testpep <- filter(peps, `Protein Group Accessions` == "YP_003046375.1")
testpep <- filter(peps, `Protein Group Accessions` == YP_003046375.1)
testpep <- filter(peps, `Unique Sequence ID` == 7)
testpep <- filter(peps, `Unique Sequence ID` == '7')
testpep <- filter(peps, `Protein Group Accessions` == 'YP_003046375.1')
head(peps$`Protein Group Accessions`)
testpep <- filter(peps, strain == '11-44', time == '1min', `Protein Group Accessions` == 'YP_003047436.1 ')
View(testpep)
testpep2 <- distinct(testpep, `Precursor Area`)
testpep2 <- filter(testpep, unique(`Precursor Area`))
testpep2 <- filter(testpep, `Precursor Area` == unique(`Precursor Area`))
View(testpep2)
testpep2 <- ungroup() %>% distinct(testpep, `Precursor Area`)
testpep2 <- ungroup(testpep) %>% distinct(`Precursor Area`)
testpep3 <- testpep2 %>% top_n(3, `Precursor Area`)
testpep4 <- filter(testpep2, testpep2 %in% testpep3)
testpep4 <- filter(testpep2, testpep3 %in% testpep3)
testpep4 <- filter(testpep2, testpep3$`Precursor Area` %in% `Precursor Area`)
testpep4 <- filter(testpep2, testpep3$`Precursor Area` == `Precursor Area`)
testpep4 <- filter(testpep2,  `Precursor Area` == testpep3$`Precursor Area`)
testpep4 <- filter(testpep2,  `Precursor Area` %in% testpep3$`Precursor Area`)
testpep4 <- filter(testpep2,  `Sequence` %in% testpep3$`Sequence`)
View(testpep4)
mean(testpep4$`Precursor Area`)
testpep3 <- testpep2 %>% group_by(t_rep) %>% top_n(3, `Precursor Area`)
View(testpep3)
mean(testpep3$`Precursor Area`)
testpep4 <- ungroup(testpep3) %>% group_by(Sequence) %>% mutate(in_reps = n()) %>% filter(in_reps > 1)
mean(testpep4$`Precursor Area`)
testpep4 <- ungroup(testpep3) %>% group_by(Sequence) %>% mutate(in_reps = n()) %>% filter(in_reps == 2)
View(testpep4)
mean(testpep4$`Precursor Area`)
mean(testpep3$`Precursor Area`)
View(testpep4)
testpep4 <- ungroup(testpep3) %>% group_by(Sequence) %>% mutate(in_reps = n()) %>% filter(in_reps > 1)
mean(testpep4$`Precursor Area`)
View(testpep4)
rm(list = c('testpep2', 'testpep3', 'testpep4'))
testpep2 <- ungroup(testpep) %>% group_by(t_rep, Sequence) %>% summarize(area = mean(`Precursor Area`))
View(testpep2)
testpep3 <- testpep2 %>% group_by(t_rep) %>% top_n(3, area)
View(testpep3)
mean(testpep3$area)
testpep4 <- testpep4 %>% group_by(t_rep) %>% top_n(3, area) %>% group_by(Sequence) %>% mutate(count = n()) %>% filter(count == 2)
testpep4 <- testpep3 %>% group_by(t_rep) %>% top_n(3, area) %>% group_by(Sequence) %>% mutate(count = n()) %>% filter(count == 2)
mean(testpep4$area)
testpep2 <- testpep %>% distinc(`Precursor Area`)
testpep2 <- testpep %>% distinct(`Precursor Area`)
testpep2 <- testpep %>% ungroup() %>% distinct(`Precursor Area`)
View(testpep2)
View(select(testpep2, `Sequence`, `Precursor Area`, `t_rep`))
View(select(testpep2, `Sequence`, `Precursor Area`, t_rep))
select(testpep2, `Sequence`, `Precursor Area`, t_rep)
select(testpep2, c(`Sequence`, `Precursor Area`, t_rep))
select(testpep2, `Sequence`, `Precursor Area`, t_rep)
testpep2 <- ungroup(testpep) %>% group_by(t_rep, Sequence) %>% filter(`Precursor Area` == max(`Precursor Area`))
testpep2 <- ungroup(testpep) %>% group_by(t_rep, Sequence) %>% filter(`Precursor Area` == max(`Precursor Area`)) %>% ungroup() %>% group_by(Sequence) %>% mutate(count = n()) %>% filter(count == 2)
View(testpep2)
testpep2 <- ungroup(testpep) %>% group_by(t_rep, Sequence) %>% distinct(`Precursor Area`) %>% filter(`Precursor Area` == max(`Precursor Area`)) %>% ungroup() %>% group_by(Sequence) %>% mutate(count = n()) %>% filter(count == 2)
View(testpep2)
View(select(testpep2, Sequence))
?select()
testpep2 <- ungroup(testpep) %>% group_by(t_rep, Sequence) %>% distinct(`Precursor Area`) %>% filter(`Precursor Area` == max(`Precursor Area`)) %>% ungroup() %>% group_by(Sequence) %>% mutate(count = n()) %>% filter(count == 2) %>% summarize(mean_area = mean(`Precursor Area`)) %>% top_n(3, mean_area)
mean(testpep2$mean_area)
View(testpep2)
testpep2 <- ungroup(testpep) %>% group_by(t_rep, Sequence) %>% distinct(`Precursor Area`) %>% filter(`Precursor Area` == max(`Precursor Area`)) %>% ungroup() %>% group_by(Sequence) %>% mutate(count = n()) %>% filter(count == 2) %>% ungroup() %>% top_n(3, `Precursor Area`)
mean(testpep2$`Precursor Area`)
testpep2 <- ungroup(testpep) %>% group_by(t_rep, Sequence) %>% distinct(`Precursor Area`) %>% filter(`Precursor Area` == max(`Precursor Area`)) %>% ungroup() %>% group_by(Sequence) %>% mutate(count = n()) %>% filter(count == 2) %>% ungroup() %>% top_n(6, `Precursor Area`)
mean(testpep2$`Precursor Area`)
testpep2 <- ungroup(testpep) %>% group_by(t_rep, Sequence) %>% distinct(`Precursor Area`) %>% filter(`Precursor Area` == max(`Precursor Area`)) %>% ungroup() %>% group_by(Sequence) %>% mutate(count = n()) %>% filter(count == 2) %>% ungroup() %>% top_n(4, `Precursor Area`)
mean(testpep2$`Precursor Area`)
testpep2 <- ungroup(testpep) %>% group_by(t_rep, Sequence) %>% distinct(`Precursor Area`) %>% filter(`Precursor Area` == max(`Precursor Area`)) %>% ungroup() %>% group_by(Sequence) %>% mutate(count = n()) %>% filter(count == 2) %>% ungroup() %>% top_n(5, `Precursor Area`)
mean(testpep2$`Precursor Area`)
testpep2 <- ungroup(testpep) %>% group_by(t_rep, Sequence) %>% distinct(`Precursor Area`) %>% filter(`Precursor Area` == max(`Precursor Area`)) %>% ungroup() %>% group_by(Sequence) %>% mutate(count = n()) %>% filter(count == 2) %>% ungroup() %>% top_n(3, `Precursor Area`)
mean(testpep2$`Precursor Area`)
View(testpep)
View(testpep)
testpep2 <- ungroup(testpep) %>% group_by(t_rep, Sequence) %>% distinct(`Precursor Area`) %>% ungroup() %>% group_by(t_rep) %>% top_n(3, `Precursor Area`)
mean(testpep2$`Precursor Area`)
View(testpep2)
testpep2 <- ungroup() %>% top_n(5, `Precursor Area`)
testpep3 <- ungroup(testpep2) %>% top_n(5, `Precursor Area`)
mean(testpep3$`Precursor Area`)
# Remove any variables in memory
rm(list = ls())
# Load appropriate libraries
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
# Read in raw data
peps <- read_tsv('../tabasco_runs/T7_Phage_Rep_3_PSMs.txt.gz')
# Split 'spectrum file' column into time, strain, and rep, and tech rep
peps <- peps %>%
separate(`Spectrum File`, into=c('strain', 'time', 'rep', 'sample_date'), sep = '_') %>%
separate(rep, into=c('b_rep', 't_rep'), sep=c(-2))
# Replace modified cysteines and methionines with unmodified
# In practice, this means replacing 'm' with 'M' and 'c' with 'C'
peps <- peps %>%
mutate(Sequence = str_to_upper(Sequence)) # Make peptide sequences uppercase
# Replace isoleucines (I) with leucines (L). They have the same mass and are thus,
# indistinguishable via mass spec, so peptides are often represented twice, once for
# each L/I variation.
peps <- peps %>%
mutate(Sequence = str_replace_all(Sequence, 'I', 'L')) %>% # Replace I with L
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`, `Search ID`, `First Scan`) %>%
distinct(Sequence) # Remove duplicate peptides
# peps <- peps %>%
#   arrange(PEP, `q-Value`, XCorr, `First Scan`) %>%
# peps2 <- peps %>%
#   ungroup() %>%
#   group_by(strain, time, b_rep, `Protein Group Accessions`, Sequence) %>%
#   arrange(desc(PEP), desc(`q-Value`), desc(XCorr)) %>%
#   mutate(PSM = n(), area_rank = row_number()) %>%
#   top_n(3) %>%
#   summarize(PSM = unique(PSM), area = mean(`Precursor Area`, na.rm = T))
peps2 <- peps %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = n()) %>% # Count number of PSMs in each protein group
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>% # Define new area as Precursor Area or Intensity if Precursor Area is missing
distinct(new_area) %>% # Remove peptides with identical sequences and areas
top_n(3, new_area) %>% # Take top 3 peptides by area
group_by(strain, time, b_rep, `Protein Group Accessions`) %>% # Regroup by protein group
summarize(PSM = unique(PSM), area = mean(new_area, na.rm = T)) # Compute mean areas from top 3 peptides, while retaining PSMs
View(peps2)
View(peps2)
# Remove any variables in memory
rm(list = ls())
# Load appropriate libraries
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
# Read in raw data
peps <- read_tsv('../tabasco_runs/T7_Phage_Rep_3_PSMs.txt.gz')
# Split 'spectrum file' column into time, strain, and rep, and tech rep
peps <- peps %>%
separate(`Spectrum File`, into=c('strain', 'time', 'rep', 'sample_date'), sep = '_') %>%
separate(rep, into=c('b_rep', 't_rep'), sep=c(-2))
# Replace modified cysteines and methionines with unmodified
# In practice, this means replacing 'm' with 'M' and 'c' with 'C'
peps <- peps %>%
mutate(Sequence = str_to_upper(Sequence)) # Make peptide sequences uppercase
# Replace isoleucines (I) with leucines (L). They have the same mass and are thus,
# indistinguishable via mass spec, so peptides are often represented twice, once for
# each L/I variation.
peps <- peps %>%
mutate(Sequence = str_replace_all(Sequence, 'I', 'L')) %>% # Replace I with L
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`, `Search ID`, `First Scan`) %>%
distinct(Sequence) # Remove duplicate peptides
# peps <- peps %>%
#   arrange(PEP, `q-Value`, XCorr, `First Scan`) %>%
# peps2 <- peps %>%
#   ungroup() %>%
#   group_by(strain, time, b_rep, `Protein Group Accessions`, Sequence) %>%
#   arrange(desc(PEP), desc(`q-Value`), desc(XCorr)) %>%
#   mutate(PSM = n(), area_rank = row_number()) %>%
#   top_n(3) %>%
#   summarize(PSM = unique(PSM), area = mean(`Precursor Area`, na.rm = T))
peps2 <- peps %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = n()) %>% # Count number of PSMs in each protein group
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>% # Define new area as Precursor Area or Intensity if Precursor Area is missing
distinct(new_area) %>% # Remove peptides with identical sequences and areas
top_n(3, new_area) %>% # Take top 3 peptides by area
group_by(strain, time, b_rep, `Protein Group Accessions`) %>% # Regroup by protein group
summarize(PSM = unique(PSM), area = geometric.mean(new_area, na.rm = T)) # Compute mean areas from top 3 peptides, while retaining PSMs
peps2 <- peps %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = n()) %>% # Count number of PSMs in each protein group
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>% # Define new area as Precursor Area or Intensity if Precursor Area is missing
distinct(new_area) %>% # Remove peptides with identical sequences and areas
top_n(3, new_area) %>% # Take top 3 peptides by area
group_by(strain, time, b_rep, `Protein Group Accessions`) %>% # Regroup by protein group
summarize(PSM = unique(PSM), area = exp(mean(log(new_area), na.rm=T))) # Compute mean areas from top 3 peptides, while retaining PSMs
View(peps2)
View(peps2)
peps2 <- peps %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = n()) %>% # Count number of PSMs in each protein group
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>% # Define new area as Precursor Area or Intensity if Precursor Area is missing
distinct(new_area) %>% # Remove peptides with identical sequences and areas
top_n(3, new_area) %>% # Take top 3 peptides by area
group_by(strain, time, b_rep, `Protein Group Accessions`) %>% # Regroup by protein group
summarize(PSM = unique(PSM), area = mean(new_area, na.rm = T)) # Compute mean areas from top 3 peptides, while retaining PSMs
peps2 <- peps %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = n()) %>% # Count number of PSMs in each protein group
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>% # Define new area as Precursor Area or Intensity if Precursor Area is missing
distinct(new_area) %>% # Remove peptides with identical sequences and areas
top_n(3, new_area) %>% # Take top 3 peptides by area
group_by(strain, time, b_rep, `Protein Group Accessions`, `Protein Descriptions`) %>% # Regroup by protein group
summarize(PSM = unique(PSM), area = mean(new_area, na.rm = T)) # Compute mean areas from top 3 peptides, while retaining PSMs
View(filter(peps2, grep1('major capsid', `Protein Description`)))
View(filter(peps2, grepl('major capsid', `Protein Description`)))
View(filter(peps2, grepl('major capsid', `Protein Descriptions`)))
capsid <- filter(peps2, grepl('major capsid', `Protein Descriptions`))
library(ggplot2)
ggplot(capsid, aes(x = time, y = area, fill = strain)) + geom_bar()
ggplot(capsid, aes(x = time, y = area, fill = strain)) + geom_bar(stat="identity")
ggplot(capsid, aes(x = time, y = area, fill = strain)) + geom_bar(stat="identity", position = "dodge")
peps2 <- peps %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = n()) %>% # Count number of PSMs in each protein group
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>% # Define new area as Precursor Area or Intensity if Precursor Area is missing
distinct(new_area) %>% # Remove peptides with identical sequences and areas
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`, Sequence) %>%
summarize(new_area = sum(new_area)) %>% # Sum areas identical peptides with different charges
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
top_n(3, new_area) %>% # Take top 3 peptides by area
group_by(strain, time, b_rep, `Protein Group Accessions`, `Protein Descriptions`) %>% # Regroup by protein group
summarize(PSM = unique(PSM), area = mean(new_area, na.rm = T)) # Compute mean areas from top 3 peptides, while retaining PSMs
peps2 <- peps %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = n()) %>% # Count number of PSMs in each protein group
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>% # Define new area as Precursor Area or Intensity if Precursor Area is missing
distinct(new_area) %>% # Remove peptides with identical sequences and areas
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`, Sequence) %>%
summarize(new_area = sum(new_area)) %>% # Sum areas identical peptides with different charges
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
top_n(3, new_area) %>% # Take top 3 peptides by area
group_by(strain, time, b_rep, `Protein Group Accessions`) %>% # Regroup by protein group
summarize(PSM = unique(PSM), area = mean(new_area, na.rm = T)) # Compute mean areas from top 3 peptides, while retaining PSMs
peps2 <- peps %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = n()) %>% # Count number of PSMs in each protein group
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>% # Define new area as Precursor Area or Intensity if Precursor Area is missing
distinct(new_area) %>% # Remove peptides with identical sequences and areas
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`, Sequence) %>%
summarize(PSM = unique(PSM), new_area = sum(new_area)) %>% # Sum areas identical peptides with different charges
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
top_n(3, new_area) %>% # Take top 3 peptides by area
group_by(strain, time, b_rep, `Protein Group Accessions`) %>% # Regroup by protein group
summarize(PSM = unique(PSM), area = mean(new_area, na.rm = T)) # Compute mean areas from top 3 peptides, while retaining PSMs
View(peps2)
peps2 <- peps %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = n()) %>% # Count number of PSMs in each protein group
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>% # Define new area as Precursor Area or Intensity if Precursor Area is missing
distinct(new_area) %>% # Remove peptides with identical sequences and areas
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`, Sequence) %>%
summarize(PSM = unique(PSM), new_area = sum(new_area)) %>% # Sum areas identical peptides with different charges
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
top_n(3, new_area) %>% # Take top 3 peptides by area
summarize(PSM = unique(PSM), new_area = mean(area, na.rm = T)) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>% # Regroup by protein group
summarize(PSM = unique(PSM), area = mean(new_area, na.rm = T)) # Compute mean areas from top 3 peptides, while retaining PSMs
peps2 <- peps %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = n()) %>% # Count number of PSMs in each protein group
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>% # Define new area as Precursor Area or Intensity if Precursor Area is missing
distinct(new_area) %>% # Remove peptides with identical sequences and areas
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`, Sequence) %>%
summarize(PSM = unique(PSM), new_area = sum(new_area)) %>% # Sum areas identical peptides with different charges
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
top_n(3, new_area) %>% # Take top 3 peptides by area
summarize(PSM = unique(PSM), new_area = mean(new_area, na.rm = T)) %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>% # Regroup by protein group
summarize(PSM = unique(PSM), area = mean(new_area, na.rm = T)) # Compute mean areas from top 3 peptides, while retaining PSMs
View(peps2)
peps2 <- peps %>%
group_by(strain, time, b_rep, `Protein Group Accessions`) %>%
mutate(PSM = n()) %>% # Count number of PSMs in each protein group
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
mutate(new_area = ifelse(!is.na(`Precursor Area`), `Precursor Area`, `Intensity`)) %>% # Define new area as Precursor Area or Intensity if Precursor Area is missing
distinct(new_area) %>% # Remove peptides with identical sequences and areas
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`, Sequence) %>%
summarize(PSM = unique(PSM), new_area = sum(new_area)) %>% # Sum areas identical peptides with different charges
group_by(strain, time, b_rep, t_rep, `Protein Group Accessions`) %>%
top_n(3, new_area) %>% # Take top 3 peptides by area
group_by(strain, time, b_rep, `Protein Group Accessions`) %>% # Regroup by protein group
summarize(PSM = unique(PSM), area = mean(new_area, na.rm = T)) # Compute mean areas from top 3 peptides, whi
write_csv(peps2, "../tabasco_runs/rep3.csv")
capsid <- filter(peps2, grepl('major capsid', `Protein Descriptions`))
View(peps2)
View(peps)
View(filter(peps, grepl('capsid', `Protein Descriptions`)))
capsid <- filter(peps2, grepl('NP_041997\\.1', `Protein Group Accessions`))
View(capsid)
ggplot(capsid, aes(x = time, y = area, fill = strain)) + geom_bar(stat="identity", position = "dodge")
capsid <- filter(peps2, grepl('NP_041998\\.1', `Protein Group Accessions`))
ggplot(capsid, aes(x = time, y = area, fill = strain)) + geom_bar(stat="identity", position = "dodge")
peps3 <- filter(peps2, grepl('NP|YP', `Protein Group Accessions`))
View(peps3)
peps3 <- filter(peps2, grepl('NP|YP', `Protein Group Accessions`), !grepl('CONTAMINANT', `Protein Group Accessions`))
peps3 <- group_by(peps3, strain, time) %>% mutate(total_area = sum(area), n_area = area/total_area)
capsid <- filter(peps3, grepl('NP_041998\\.1', `Protein Group Accessions`))
ggplot(capsid, aes(x = time, y = area, fill = strain)) + geom_bar(stat="identity", position = "dodge")
ggplot(capsid, aes(x = time, y = n_area, fill = strain)) + geom_bar(stat="identity", position = "dodge")
View(capsid)
source('~/PycharmProjects/tabasco/scripts/R/raw_parser.R', echo=TRUE)
source('~/PycharmProjects/tabasco/scripts/R/raw_parser.R', echo=TRUE)
source('~/PycharmProjects/tabasco/scripts/R/raw_parser.R', echo=TRUE)
peps3 <- filter(peps2, grepl('NP|YP', `Protein Group Accessions`), !grepl('CONTAMINANT', `Protein Group Accessions`))
peps3 <- group_by(peps3, strain, time) %>% mutate(total_area = sum(area), n_area = area/total_area)
capsid <- filter(peps3, grepl('NP_041998\\.1', `Protein Group Accessions`))
ggplot(capsid, aes(x = time, y = n_area, fill = strain)) + geom_bar(stat="identity", position = "dodge")
